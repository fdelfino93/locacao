                  {/* Header da Seção */}
                  <motion.div
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.3 }}
                    className="text-center"
                  >
                    <div>
                      <h2 className="text-2xl font-bold text-foreground">
                        Documentos do Locatário
                      </h2>
                      <p className="text-sm text-muted-foreground">
                        Faça upload dos documentos do locatário. Formatos aceitos: PDF, JPG, PNG (máx. 5MB)
                      </p>
                    </div>
                  </motion.div>

                  {/* Documentos Obrigatórios */}
                  <motion.div
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.3, delay: 0.1 }}
                    className="card-glass p-6 rounded-xl border border-border shadow-sm"
                  >
                    <div className="mb-6">
                      <div className="flex items-center space-x-2 mb-3">
                        <div className="w-2 h-2 bg-red-500 rounded-full"></div>
                        <h3 className="text-lg font-semibold text-foreground">
                          Documentos Obrigatórios
                        </h3>
                      </div>
                      <p className="text-sm text-muted-foreground">
                        Estes documentos são necessários para o cadastro do locatário.
                      </p>
                    </div>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      {formData.tipo_pessoa === 'PF' ? (
                        <>
                          <FileUpload
                            label="CPF"
                            accept=".pdf,.jpg,.jpeg,.png"
                            maxSize={5}
                            onFileSelect={(file) => console.log('CPF:', file)}
                            required
                          />
                          <FileUpload
                            label="RG"
                            accept=".pdf,.jpg,.jpeg,.png"
                            maxSize={5}
                            onFileSelect={(file) => console.log('RG:', file)}
                            required
                          />
                          <FileUpload
                            label="Comprovante de Renda"
                            accept=".pdf,.jpg,.jpeg,.png"
                            maxSize={5}
                            onFileSelect={(file) => console.log('Renda:', file)}
                            required
                          />
                          <FileUpload
                            label="Comprovante de Estado Civil"
                            accept=".pdf,.jpg,.jpeg,.png"
                            maxSize={5}
                            onFileSelect={(file) => console.log('Estado Civil:', file)}
                          />
                        </>
                      ) : (
                        <>
                          <FileUpload
                            label="Contrato Social"
                            accept=".pdf,.jpg,.jpeg,.png"
                            maxSize={5}
                            onFileSelect={(file) => console.log('Contrato Social:', file)}
                            required
                          />
                          <FileUpload
                            label="CNPJ Atualizado"
                            accept=".pdf,.jpg,.jpeg,.png"
                            maxSize={5}
                            onFileSelect={(file) => console.log('CNPJ:', file)}
                            required
                          />
                          <FileUpload
                            label="Cartão CNPJ"
                            accept=".pdf,.jpg,.jpeg,.png"
                            maxSize={5}
                            onFileSelect={(file) => console.log('Cartão CNPJ:', file)}
                            required
                          />
                          <FileUpload
                            label="Última Alteração Contratual"
                            accept=".pdf,.jpg,.jpeg,.png"
                            maxSize={5}
                            onFileSelect={(file) => console.log('Alteração:', file)}
                          />
                        </>
                      )}
                      
                      <FileUpload
                        label="Comprovante de Endereço"
                        accept=".pdf,.jpg,.jpeg,.png"
                        maxSize={5}
                        onFileSelect={(file) => console.log('Endereço:', file)}
                        required
                      />
                      
                      {formData.tipo_pessoa === 'PJ' && (
                        <FileUpload
                          label="RG do Representante Legal"
                          accept=".pdf,.jpg,.jpeg,.png"
                          maxSize={5}
                          onFileSelect={(file) => console.log('RG Representante:', file)}
                          required
                        />
                      )}
                    </div>
                  </motion.div>

                  {/* Documentos Opcionais */}
                  <motion.div
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.3, delay: 0.2 }}
                    className="card-glass p-6 rounded-xl border border-border shadow-sm"
                  >
                    <div className="mb-6">
                      <div className="flex items-center space-x-2 mb-3">
                        <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                        <h3 className="text-lg font-semibold text-foreground">
                          Documentos Opcionais
                        </h3>
                      </div>
                      <p className="text-sm text-muted-foreground">
                        Documentos complementares que podem ser úteis para o cadastro.
                      </p>
                    </div>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      {formData.tipo_pessoa === 'PF' ? (
                        <>
                          <FileUpload
                            label="Certidão de Casamento"
                            accept=".pdf,.jpg,.jpeg,.png"
                            maxSize={5}
                            onFileSelect={(file) => console.log('Casamento:', file)}
                          />
                          <FileUpload
                            label="Comprovante de Bens"
                            accept=".pdf,.jpg,.jpeg,.png"
                            maxSize={5}
                            onFileSelect={(file) => console.log('Bens:', file)}
                          />
                          <FileUpload
                            label="Declaração de Imposto de Renda"
                            accept=".pdf,.jpg,.jpeg,.png"
                            maxSize={5}
                            onFileSelect={(file) => console.log('IR:', file)}
                          />
                          <FileUpload
                            label="RG do Cônjuge"
                            accept=".pdf,.jpg,.jpeg,.png"
                            maxSize={5}
                            onFileSelect={(file) => console.log('RG Cônjuge:', file)}
                          />
                        </>
                      ) : (
                        <>
                          <FileUpload
                            label="Balanço Patrimonial"
                            accept=".pdf,.jpg,.jpeg,.png"
                            maxSize={5}
                            onFileSelect={(file) => console.log('Balanço:', file)}
                          />
                          <FileUpload
                            label="Demonstração de Resultado"
                            accept=".pdf,.jpg,.jpeg,.png"
                            maxSize={5}
                            onFileSelect={(file) => console.log('DRE:', file)}
                          />
                          <FileUpload
                            label="Certidão Negativa de Débitos"
                            accept=".pdf,.jpg,.jpeg,.png"
                            maxSize={5}
                            onFileSelect={(file) => console.log('Certidão:', file)}
                          />
                          <FileUpload
                            label="Procuração (se aplicável)"
                            accept=".pdf,.jpg,.jpeg,.png"
                            maxSize={5}
                            onFileSelect={(file) => console.log('Procuração:', file)}
                          />
                        </>
                      )}
                      
                      <FileUpload
                        label="Outros Documentos"
                        accept=".pdf,.jpg,.jpeg,.png"
                        maxSize={5}
                        onFileSelect={(file) => console.log('Outros:', file)}
                      />
                    </div>
                  </motion.div>
                </TabsContent>

                {/* Aba 3: Observações */}
                <TabsContent value="observacoes" className="space-y-8">
                  {/* Header da Seção */}
                  <motion.div
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.3 }}
                    className="text-center space-y-4"
                  >
                    <div className="flex items-center justify-center gap-3">
                      <motion.div 
                        className="p-3 bg-gradient-to-r from-purple-500 to-pink-500 rounded-xl shadow-lg"
                        whileHover={{ scale: 1.05, rotate: [0, -5, 5, 0] }}
                        transition={{ duration: 0.3 }}
                      >
                        <MessageSquare className="w-6 h-6 text-white" />
                      </motion.div>
                      <div>
                        <h2 className="text-2xl font-bold text-foreground">
                          Observações
                        </h2>
                        <p className="text-sm text-muted-foreground">
                          Informações adicionais sobre o locatário
                        </p>
                      </div>
                    </div>
                  </motion.div>

                  {/* Seção de Observações Gerais */}
                  <motion.div
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.3, delay: 0.1 }}
                    className="card-glass p-6 rounded-xl border border-border shadow-sm"
                  >
                    <div className="mb-6">
                      <div className="flex items-center gap-3 mb-3">
                        <motion.div 
                          className="p-2 bg-gradient-to-r from-purple-500 to-pink-500 rounded-lg shadow-md"
                          whileHover={{ scale: 1.05 }}
                        >
                          <MessageSquare className="w-5 h-5 text-white" />
                        </motion.div>
                        <div>
                          <h3 className="text-lg font-semibold text-foreground">
                            Observações Gerais
                          </h3>
                          <p className="text-sm text-muted-foreground">
                            Adicione informações complementares relevantes
                          </p>
                        </div>
                      </div>
                    </div>
                    
                    <div className="space-y-4">
                      <div>
                        <Label htmlFor="observacoes" className="text-sm font-medium text-foreground">Observações</Label>
                        <Textarea
                          id="observacoes"
                          value={formData.observacoes}
                          onChange={(e) => handleInputChange('observacoes', e.target.value)}
                          placeholder="Digite aqui informações adicionais sobre o locatário, como características especiais, histórico, preferências ou qualquer detalhe importante para o cadastro..."
                          rows={8}
                          className="resize-none"
                        />
                        <p className="text-xs text-muted-foreground mt-1">
                          Utilize este espaço para registrar informações que não se encaixam nos outros campos
                        </p>
                      </div>

                      {/* Informações sobre o campo */}
                      <motion.div
                        initial={{ opacity: 0, y: 10 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.3, delay: 0.2 }}
                        className="bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg border border-blue-200 dark:border-blue-800"
                      >
                        <div className="flex items-start gap-3">
                          <MessageSquare className="w-5 h-5 text-blue-600 dark:text-blue-400 mt-0.5 flex-shrink-0" />
                          <div className="text-sm text-blue-700 dark:text-blue-300">
                            <h4 className="font-semibold mb-2 text-blue-800 dark:text-blue-200">
                              Sugestões para observações:
                            </h4>
                            <ul className="space-y-1 text-xs">
                              <li>• Histórico de locações anteriores</li>
                              <li>• Preferências ou restrições específicas</li>
                              <li>• Informações sobre pets ou animais</li>
                              <li>• Detalhes sobre moradores adicionais</li>
                              <li>• Condições ou acordos especiais</li>
                              <li>• Anotações sobre documentação pendente</li>
                            </ul>
                          </div>
                        </div>
                      </motion.div>
                    </div>
                  </motion.div>
                </TabsContent>
              </Tabs>

            {/* Submit Button */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.6 }}
              className="pt-6"
            >
              <motion.div
                whileHover={{ scale: 1.02 }}
                whileTap={{ scale: 0.98 }}
              >
                <Button 
                  type="submit" 
                  disabled={loading}
                  className="w-full btn-gradient py-6 text-lg font-semibold rounded-xl border-0 shadow-2xl hover:shadow-primary/25 transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  {loading ? (
                    <div className="flex items-center space-x-2">
                      <div className="w-5 h-5 border-2 border-primary-foreground/30 border-t-primary-foreground rounded-full animate-spin" />
                      <span>Cadastrando...</span>
                    </div>
                  ) : (
                    <div className="flex items-center space-x-2">
                      <Home className="w-5 h-5" />
                      <span>Cadastrar Locatário</span>
                    </div>
                  )}
                </Button>
              </motion.div>
            </motion.div>
          </form>
          </div>
        </motion.div>
      </div>
    </div>
  );
};